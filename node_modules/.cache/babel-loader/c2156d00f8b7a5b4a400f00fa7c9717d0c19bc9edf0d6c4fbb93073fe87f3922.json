{"ast":null,"code":"var _jsxFileName = \"/Users/deepakyadav/Documents/ECommerce-Admin-Panel/src/contexts/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport toast from 'react-hot-toast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [token, setToken] = useState(localStorage.getItem('adminToken'));\n\n  // Set up axios defaults\n  useEffect(() => {\n    if (token) {\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      checkAuthStatus();\n    } else {\n      setLoading(false);\n    }\n  }, [token]);\n  const checkAuthStatus = async () => {\n    try {\n      // For demo purposes, check if we have a demo token\n      if (token && token.startsWith('demo-token-')) {\n        // Create demo user data\n        const demoUser = {\n          id: 1,\n          name: 'Admin User',\n          email: 'admin@example.com',\n          role: 'admin',\n          avatar: 'https://via.placeholder.com/40x40/3B82F6/FFFFFF?text=AU'\n        };\n        setUser(demoUser);\n      } else {\n        // If no valid demo token, logout\n        logout();\n      }\n    } catch (error) {\n      console.error('Auth check failed:', error);\n      logout();\n    } finally {\n      setLoading(false);\n    }\n  };\n  const login = async (email, password) => {\n    try {\n      // Demo authentication - no backend required\n      if (email === 'admin@example.com' && password === 'admin123') {\n        const demoUser = {\n          id: 1,\n          name: 'Admin User',\n          email: 'admin@example.com',\n          role: 'admin',\n          avatar: 'https://via.placeholder.com/40x40/3B82F6/FFFFFF?text=AU'\n        };\n        const demoToken = 'demo-token-' + Date.now();\n        setToken(demoToken);\n        setUser(demoUser);\n        localStorage.setItem('adminToken', demoToken);\n        axios.defaults.headers.common['Authorization'] = `Bearer ${demoToken}`;\n        toast.success('Login successful!');\n        return {\n          success: true\n        };\n      } else {\n        toast.error('Invalid credentials. Use demo credentials: admin@example.com / admin123');\n        return {\n          success: false,\n          message: 'Invalid credentials'\n        };\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      const message = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Login failed';\n      toast.error(message);\n      return {\n        success: false,\n        message\n      };\n    }\n  };\n  const logout = () => {\n    setUser(null);\n    setToken(null);\n    localStorage.removeItem('adminToken');\n    delete axios.defaults.headers.common['Authorization'];\n    toast.success('Logged out successfully');\n  };\n  const updateProfile = async profileData => {\n    try {\n      const response = await axios.put('/api/auth/profile', profileData);\n      setUser(response.data.user);\n      toast.success('Profile updated successfully!');\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      const message = ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Profile update failed';\n      toast.error(message);\n      return {\n        success: false,\n        message\n      };\n    }\n  };\n  const changePassword = async (currentPassword, newPassword) => {\n    try {\n      await axios.put('/api/auth/change-password', {\n        currentPassword,\n        newPassword\n      });\n      toast.success('Password changed successfully!');\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      const message = ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || 'Password change failed';\n      toast.error(message);\n      return {\n        success: false,\n        message\n      };\n    }\n  };\n  const value = {\n    user,\n    loading,\n    login,\n    logout,\n    updateProfile,\n    changePassword,\n    isAuthenticated: !!user\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"xWRQH/0XnFOif8lHZq/DKK/+Nts=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","axios","toast","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","token","setToken","localStorage","getItem","defaults","headers","common","checkAuthStatus","startsWith","demoUser","id","name","email","role","avatar","logout","error","console","login","password","demoToken","Date","now","setItem","success","message","_error$response","_error$response$data","response","data","removeItem","updateProfile","profileData","put","_error$response2","_error$response2$data","changePassword","currentPassword","newPassword","_error$response3","_error$response3$data","value","isAuthenticated","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/deepakyadav/Documents/ECommerce-Admin-Panel/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport toast from 'react-hot-toast';\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [token, setToken] = useState(localStorage.getItem('adminToken'));\n\n  // Set up axios defaults\n  useEffect(() => {\n    if (token) {\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      checkAuthStatus();\n    } else {\n      setLoading(false);\n    }\n  }, [token]);\n\n  const checkAuthStatus = async () => {\n    try {\n      // For demo purposes, check if we have a demo token\n      if (token && token.startsWith('demo-token-')) {\n        // Create demo user data\n        const demoUser = {\n          id: 1,\n          name: 'Admin User',\n          email: 'admin@example.com',\n          role: 'admin',\n          avatar: 'https://via.placeholder.com/40x40/3B82F6/FFFFFF?text=AU'\n        };\n        setUser(demoUser);\n      } else {\n        // If no valid demo token, logout\n        logout();\n      }\n    } catch (error) {\n      console.error('Auth check failed:', error);\n      logout();\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const login = async (email, password) => {\n    try {\n      // Demo authentication - no backend required\n      if (email === 'admin@example.com' && password === 'admin123') {\n        const demoUser = {\n          id: 1,\n          name: 'Admin User',\n          email: 'admin@example.com',\n          role: 'admin',\n          avatar: 'https://via.placeholder.com/40x40/3B82F6/FFFFFF?text=AU'\n        };\n        \n        const demoToken = 'demo-token-' + Date.now();\n        \n        setToken(demoToken);\n        setUser(demoUser);\n        localStorage.setItem('adminToken', demoToken);\n        axios.defaults.headers.common['Authorization'] = `Bearer ${demoToken}`;\n        \n        toast.success('Login successful!');\n        return { success: true };\n      } else {\n        toast.error('Invalid credentials. Use demo credentials: admin@example.com / admin123');\n        return { success: false, message: 'Invalid credentials' };\n      }\n    } catch (error) {\n      const message = error.response?.data?.message || 'Login failed';\n      toast.error(message);\n      return { success: false, message };\n    }\n  };\n\n  const logout = () => {\n    setUser(null);\n    setToken(null);\n    localStorage.removeItem('adminToken');\n    delete axios.defaults.headers.common['Authorization'];\n    toast.success('Logged out successfully');\n  };\n\n  const updateProfile = async (profileData) => {\n    try {\n      const response = await axios.put('/api/auth/profile', profileData);\n      setUser(response.data.user);\n      toast.success('Profile updated successfully!');\n      return { success: true };\n    } catch (error) {\n      const message = error.response?.data?.message || 'Profile update failed';\n      toast.error(message);\n      return { success: false, message };\n    }\n  };\n\n  const changePassword = async (currentPassword, newPassword) => {\n    try {\n      await axios.put('/api/auth/change-password', { currentPassword, newPassword });\n      toast.success('Password changed successfully!');\n      return { success: true };\n    } catch (error) {\n      const message = error.response?.data?.message || 'Password change failed';\n      toast.error(message);\n      return { success: false, message };\n    }\n  };\n\n  const value = {\n    user,\n    loading,\n    login,\n    logout,\n    updateProfile,\n    changePassword,\n    isAuthenticated: !!user\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}