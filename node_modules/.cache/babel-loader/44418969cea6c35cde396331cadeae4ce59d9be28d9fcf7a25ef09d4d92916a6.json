{"ast":null,"code":"var _jsxFileName = \"/Users/deepakyadav/Documents/ECommerce-Admin-Panel/src/contexts/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport toast from 'react-hot-toast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [token, setToken] = useState(localStorage.getItem('adminToken'));\n\n  // Set up axios defaults\n  useEffect(() => {\n    if (token) {\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      checkAuthStatus();\n    } else {\n      setLoading(false);\n    }\n  }, [token]);\n  const checkAuthStatus = async () => {\n    try {\n      // For demo purposes, check if we have a demo token\n      if (token && token.startsWith('demo-token-')) {\n        // Create demo user data\n        const demoUser = {\n          id: 1,\n          name: 'Admin User',\n          email: 'admin@example.com',\n          role: 'admin',\n          avatar: 'https://via.placeholder.com/40x40/3B82F6/FFFFFF?text=AU'\n        };\n        setUser(demoUser);\n      } else {\n        // If no valid demo token, logout\n        logout();\n      }\n    } catch (error) {\n      console.error('Auth check failed:', error);\n      logout();\n    } finally {\n      setLoading(false);\n    }\n  };\n  const login = async (email, password) => {\n    try {\n      // Demo authentication - no backend required\n      if (email === 'admin@example.com' && password === 'admin123') {\n        const demoUser = {\n          id: 1,\n          name: 'Admin User',\n          email: 'admin@example.com',\n          role: 'admin',\n          avatar: 'https://via.placeholder.com/40x40/3B82F6/FFFFFF?text=AU'\n        };\n        const demoToken = 'demo-token-' + Date.now();\n        setToken(demoToken);\n        setUser(demoUser);\n        localStorage.setItem('adminToken', demoToken);\n        axios.defaults.headers.common['Authorization'] = `Bearer ${demoToken}`;\n        toast.success('Login successful!');\n        return {\n          success: true\n        };\n      } else {\n        toast.error('Invalid credentials. Use demo credentials: admin@example.com / admin123');\n        return {\n          success: false,\n          message: 'Invalid credentials'\n        };\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      const message = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Login failed';\n      toast.error(message);\n      return {\n        success: false,\n        message\n      };\n    }\n  };\n  const logout = () => {\n    setUser(null);\n    setToken(null);\n    localStorage.removeItem('adminToken');\n    delete axios.defaults.headers.common['Authorization'];\n    toast.success('Logged out successfully');\n  };\n  const updateProfile = async profileData => {\n    try {\n      // Demo mode - just update local user state\n      if (user) {\n        const updatedUser = {\n          ...user,\n          ...profileData\n        };\n        setUser(updatedUser);\n        toast.success('Profile updated successfully! (Demo mode)');\n        return {\n          success: true\n        };\n      } else {\n        toast.error('No user logged in');\n        return {\n          success: false,\n          message: 'No user logged in'\n        };\n      }\n    } catch (error) {\n      toast.error('Profile update failed');\n      return {\n        success: false,\n        message: 'Profile update failed'\n      };\n    }\n  };\n  const changePassword = async (currentPassword, newPassword) => {\n    try {\n      // Demo mode - just show success message\n      if (currentPassword === 'admin123') {\n        toast.success('Password changed successfully! (Demo mode)');\n        return {\n          success: true\n        };\n      } else {\n        toast.error('Current password is incorrect');\n        return {\n          success: false,\n          message: 'Current password is incorrect'\n        };\n      }\n    } catch (error) {\n      toast.error('Password change failed');\n      return {\n        success: false,\n        message: 'Password change failed'\n      };\n    }\n  };\n  const value = {\n    user,\n    loading,\n    login,\n    logout,\n    updateProfile,\n    changePassword,\n    isAuthenticated: !!user\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"xWRQH/0XnFOif8lHZq/DKK/+Nts=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","toast","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","token","setToken","localStorage","getItem","axios","defaults","headers","common","checkAuthStatus","startsWith","demoUser","id","name","email","role","avatar","logout","error","console","login","password","demoToken","Date","now","setItem","success","message","_error$response","_error$response$data","response","data","removeItem","updateProfile","profileData","updatedUser","changePassword","currentPassword","newPassword","value","isAuthenticated","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/deepakyadav/Documents/ECommerce-Admin-Panel/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport toast from 'react-hot-toast';\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [token, setToken] = useState(localStorage.getItem('adminToken'));\n\n  // Set up axios defaults\n  useEffect(() => {\n    if (token) {\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      checkAuthStatus();\n    } else {\n      setLoading(false);\n    }\n  }, [token]);\n\n  const checkAuthStatus = async () => {\n    try {\n      // For demo purposes, check if we have a demo token\n      if (token && token.startsWith('demo-token-')) {\n        // Create demo user data\n        const demoUser = {\n          id: 1,\n          name: 'Admin User',\n          email: 'admin@example.com',\n          role: 'admin',\n          avatar: 'https://via.placeholder.com/40x40/3B82F6/FFFFFF?text=AU'\n        };\n        setUser(demoUser);\n      } else {\n        // If no valid demo token, logout\n        logout();\n      }\n    } catch (error) {\n      console.error('Auth check failed:', error);\n      logout();\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const login = async (email, password) => {\n    try {\n      // Demo authentication - no backend required\n      if (email === 'admin@example.com' && password === 'admin123') {\n        const demoUser = {\n          id: 1,\n          name: 'Admin User',\n          email: 'admin@example.com',\n          role: 'admin',\n          avatar: 'https://via.placeholder.com/40x40/3B82F6/FFFFFF?text=AU'\n        };\n        \n        const demoToken = 'demo-token-' + Date.now();\n        \n        setToken(demoToken);\n        setUser(demoUser);\n        localStorage.setItem('adminToken', demoToken);\n        axios.defaults.headers.common['Authorization'] = `Bearer ${demoToken}`;\n        \n        toast.success('Login successful!');\n        return { success: true };\n      } else {\n        toast.error('Invalid credentials. Use demo credentials: admin@example.com / admin123');\n        return { success: false, message: 'Invalid credentials' };\n      }\n    } catch (error) {\n      const message = error.response?.data?.message || 'Login failed';\n      toast.error(message);\n      return { success: false, message };\n    }\n  };\n\n  const logout = () => {\n    setUser(null);\n    setToken(null);\n    localStorage.removeItem('adminToken');\n    delete axios.defaults.headers.common['Authorization'];\n    toast.success('Logged out successfully');\n  };\n\n  const updateProfile = async (profileData) => {\n    try {\n      // Demo mode - just update local user state\n      if (user) {\n        const updatedUser = { ...user, ...profileData };\n        setUser(updatedUser);\n        toast.success('Profile updated successfully! (Demo mode)');\n        return { success: true };\n      } else {\n        toast.error('No user logged in');\n        return { success: false, message: 'No user logged in' };\n      }\n    } catch (error) {\n      toast.error('Profile update failed');\n      return { success: false, message: 'Profile update failed' };\n    }\n  };\n\n  const changePassword = async (currentPassword, newPassword) => {\n    try {\n      // Demo mode - just show success message\n      if (currentPassword === 'admin123') {\n        toast.success('Password changed successfully! (Demo mode)');\n        return { success: true };\n      } else {\n        toast.error('Current password is incorrect');\n        return { success: false, message: 'Current password is incorrect' };\n      }\n    } catch (error) {\n      toast.error('Password change failed');\n      return { success: false, message: 'Password change failed' };\n    }\n  };\n\n  const value = {\n    user,\n    loading,\n    login,\n    logout,\n    updateProfile,\n    changePassword,\n    isAuthenticated: !!user\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}