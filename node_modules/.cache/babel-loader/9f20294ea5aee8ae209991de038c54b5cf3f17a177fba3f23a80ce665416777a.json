{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { categoryAPI } from \"../../utils/api\";\nimport toast from \"react-hot-toast\";\n\n// Async thunks\nexport const fetchCategories = createAsyncThunk(\"categories/fetchCategories\", async (_, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await categoryAPI.getAll();\n    return response.data;\n  } catch (error) {\n    var _error$response, _error$response$data;\n    return rejectWithValue(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || \"Failed to fetch categories\");\n  }\n});\nexport const createCategory = createAsyncThunk(\"categories/createCategory\", async (categoryData, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await categoryAPI.create(categoryData);\n    toast.success(\"Category created successfully!\");\n    return response.data;\n  } catch (error) {\n    var _error$response2, _error$response2$data;\n    return rejectWithValue(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || \"Failed to create category\");\n  }\n});\nexport const updateCategory = createAsyncThunk(\"categories/updateCategory\", async ({\n  id,\n  categoryData\n}, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await categoryAPI.update(id, categoryData);\n    toast.success(\"Category updated successfully!\");\n    return response.data;\n  } catch (error) {\n    var _error$response3, _error$response3$data;\n    return rejectWithValue(((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || \"Failed to update category\");\n  }\n});\nexport const deleteCategory = createAsyncThunk(\"categories/deleteCategory\", async (id, {\n  rejectWithValue\n}) => {\n  try {\n    await categoryAPI.delete(id);\n    toast.success(\"Category deleted successfully!\");\n    return id;\n  } catch (error) {\n    var _error$response4, _error$response4$data;\n    return rejectWithValue(((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.message) || \"Failed to delete category\");\n  }\n});\nconst initialState = {\n  categories: [],\n  loading: false,\n  error: null,\n  currentCategory: null\n};\nconst categorySlice = createSlice({\n  name: \"categories\",\n  initialState,\n  reducers: {\n    setCurrentCategory: (state, action) => {\n      state.currentCategory = action.payload;\n    },\n    clearCurrentCategory: state => {\n      state.currentCategory = null;\n    },\n    clearError: state => {\n      state.error = null;\n    }\n  },\n  extraReducers: builder => {\n    builder\n    // Fetch Categories\n    .addCase(fetchCategories.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(fetchCategories.fulfilled, (state, action) => {\n      state.loading = false;\n      state.categories = action.payload.categories || action.payload;\n    }).addCase(fetchCategories.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n      toast.error(action.payload);\n    })\n\n    // Create Category\n    .addCase(createCategory.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(createCategory.fulfilled, (state, action) => {\n      state.loading = false;\n      if (action.payload.category) {\n        state.categories.push(action.payload.category);\n      } else {\n        // If the API returns just the category data\n        state.categories.push(action.payload);\n      }\n    }).addCase(createCategory.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n      toast.error(action.payload);\n    })\n\n    // Update Category\n    .addCase(updateCategory.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(updateCategory.fulfilled, (state, action) => {\n      state.loading = false;\n      const index = state.categories.findIndex(c => c._id === action.payload._id);\n      if (index !== -1) {\n        state.categories[index] = action.payload;\n      }\n      if (state.currentCategory && state.currentCategory._id === action.payload._id) {\n        state.currentCategory = action.payload;\n      }\n    }).addCase(updateCategory.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n      toast.error(action.payload);\n    })\n\n    // Delete Category\n    .addCase(deleteCategory.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(deleteCategory.fulfilled, (state, action) => {\n      state.loading = false;\n      state.categories = state.categories.filter(c => c._id !== action.payload);\n      if (state.currentCategory && state.currentCategory._id === action.payload) {\n        state.currentCategory = null;\n      }\n    }).addCase(deleteCategory.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n      toast.error(action.payload);\n    });\n  }\n});\nexport const {\n  setCurrentCategory,\n  clearCurrentCategory,\n  clearError\n} = categorySlice.actions;\nexport default categorySlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","categoryAPI","toast","fetchCategories","_","rejectWithValue","response","getAll","data","error","_error$response","_error$response$data","message","createCategory","categoryData","create","success","_error$response2","_error$response2$data","updateCategory","id","update","_error$response3","_error$response3$data","deleteCategory","delete","_error$response4","_error$response4$data","initialState","categories","loading","currentCategory","categorySlice","name","reducers","setCurrentCategory","state","action","payload","clearCurrentCategory","clearError","extraReducers","builder","addCase","pending","fulfilled","rejected","category","push","index","findIndex","c","_id","filter","actions","reducer"],"sources":["/Users/deepakyadav/Documents/ECommerce-Admin-Panel/src/store/slices/categorySlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { categoryAPI } from \"../../utils/api\";\nimport toast from \"react-hot-toast\";\n\n// Async thunks\nexport const fetchCategories = createAsyncThunk(\n  \"categories/fetchCategories\",\n  async (_, { rejectWithValue }) => {\n    try {\n      const response = await categoryAPI.getAll();\n      return response.data;\n    } catch (error) {\n      return rejectWithValue(\n        error.response?.data?.message || \"Failed to fetch categories\"\n      );\n    }\n  }\n);\n\nexport const createCategory = createAsyncThunk(\n  \"categories/createCategory\",\n  async (categoryData, { rejectWithValue }) => {\n    try {\n      const response = await categoryAPI.create(categoryData);\n      toast.success(\"Category created successfully!\");\n      return response.data;\n    } catch (error) {\n      return rejectWithValue(\n        error.response?.data?.message || \"Failed to create category\"\n      );\n    }\n  }\n);\n\nexport const updateCategory = createAsyncThunk(\n  \"categories/updateCategory\",\n  async ({ id, categoryData }, { rejectWithValue }) => {\n    try {\n      const response = await categoryAPI.update(id, categoryData);\n      toast.success(\"Category updated successfully!\");\n      return response.data;\n    } catch (error) {\n      return rejectWithValue(\n        error.response?.data?.message || \"Failed to update category\"\n      );\n    }\n  }\n);\n\nexport const deleteCategory = createAsyncThunk(\n  \"categories/deleteCategory\",\n  async (id, { rejectWithValue }) => {\n    try {\n      await categoryAPI.delete(id);\n      toast.success(\"Category deleted successfully!\");\n      return id;\n    } catch (error) {\n      return rejectWithValue(\n        error.response?.data?.message || \"Failed to delete category\"\n      );\n    }\n  }\n);\n\nconst initialState = {\n  categories: [],\n  loading: false,\n  error: null,\n  currentCategory: null,\n};\n\nconst categorySlice = createSlice({\n  name: \"categories\",\n  initialState,\n  reducers: {\n    setCurrentCategory: (state, action) => {\n      state.currentCategory = action.payload;\n    },\n    clearCurrentCategory: (state) => {\n      state.currentCategory = null;\n    },\n    clearError: (state) => {\n      state.error = null;\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      // Fetch Categories\n      .addCase(fetchCategories.pending, (state) => {\n        state.loading = true;\n        state.error = null;\n      })\n      .addCase(fetchCategories.fulfilled, (state, action) => {\n        state.loading = false;\n        state.categories = action.payload.categories || action.payload;\n      })\n      .addCase(fetchCategories.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.payload;\n        toast.error(action.payload);\n      })\n\n      // Create Category\n      .addCase(createCategory.pending, (state) => {\n        state.loading = true;\n        state.error = null;\n      })\n      .addCase(createCategory.fulfilled, (state, action) => {\n        state.loading = false;\n        if (action.payload.category) {\n          state.categories.push(action.payload.category);\n        } else {\n          // If the API returns just the category data\n          state.categories.push(action.payload);\n        }\n      })\n      .addCase(createCategory.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.payload;\n        toast.error(action.payload);\n      })\n\n      // Update Category\n      .addCase(updateCategory.pending, (state) => {\n        state.loading = true;\n        state.error = null;\n      })\n      .addCase(updateCategory.fulfilled, (state, action) => {\n        state.loading = false;\n        const index = state.categories.findIndex(\n          (c) => c._id === action.payload._id\n        );\n        if (index !== -1) {\n          state.categories[index] = action.payload;\n        }\n        if (\n          state.currentCategory &&\n          state.currentCategory._id === action.payload._id\n        ) {\n          state.currentCategory = action.payload;\n        }\n      })\n      .addCase(updateCategory.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.payload;\n        toast.error(action.payload);\n      })\n\n      // Delete Category\n      .addCase(deleteCategory.pending, (state) => {\n        state.loading = true;\n        state.error = null;\n      })\n      .addCase(deleteCategory.fulfilled, (state, action) => {\n        state.loading = false;\n        state.categories = state.categories.filter(\n          (c) => c._id !== action.payload\n        );\n        if (\n          state.currentCategory &&\n          state.currentCategory._id === action.payload\n        ) {\n          state.currentCategory = null;\n        }\n      })\n      .addCase(deleteCategory.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.payload;\n        toast.error(action.payload);\n      });\n  },\n});\n\nexport const { setCurrentCategory, clearCurrentCategory, clearError } =\n  categorySlice.actions;\n\nexport default categorySlice.reducer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}