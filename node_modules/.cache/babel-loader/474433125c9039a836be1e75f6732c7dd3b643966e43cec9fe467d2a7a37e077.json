{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport { authAPI } from '../../utils/api';\nimport toast from 'react-hot-toast';\n\n// Async thunks\nexport const login = createAsyncThunk('auth/login', async (credentials, {\n  rejectWithValue\n}) => {\n  try {\n    // Check for demo credentials first\n    if (credentials.email === 'admin@example.com' && credentials.password === 'admin123') {\n      const demoUser = {\n        id: 1,\n        name: 'Admin User',\n        email: 'admin@example.com',\n        username: 'admin',\n        role: 'admin',\n        avatar: 'https://via.placeholder.com/40x40/3B82F6/FFFFFF?text=AU'\n      };\n      const demoToken = 'demo-token-' + Date.now();\n      return {\n        token: demoToken,\n        user: demoUser\n      };\n    }\n\n    // If not demo credentials, try API\n    const response = await authAPI.login(credentials);\n    return response.data;\n  } catch (error) {\n    var _error$response, _error$response$data;\n    // If API fails and not demo credentials, reject\n    return rejectWithValue(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Login failed');\n  }\n});\nexport const getProfile = createAsyncThunk('auth/getProfile', async (_, {\n  rejectWithValue,\n  getState\n}) => {\n  try {\n    const state = getState();\n    const token = state.auth.token;\n    if (token && !token.startsWith('demo-token-')) {\n      const response = await authAPI.getProfile();\n      return response.data;\n    } else if (token && token.startsWith('demo-token-')) {\n      // Demo mode fallback\n      return {\n        id: 1,\n        name: 'Admin User',\n        email: 'admin@example.com',\n        role: 'admin',\n        avatar: 'https://via.placeholder.com/40x40/3B82F6/FFFFFF?text=AU'\n      };\n    }\n    throw new Error('No token available');\n  } catch (error) {\n    return rejectWithValue(error.message || 'Failed to get profile');\n  }\n});\nexport const updateProfile = createAsyncThunk('auth/updateProfile', async (profileData, {\n  rejectWithValue,\n  getState\n}) => {\n  try {\n    const state = getState();\n    const token = state.auth.token;\n    if (token && !token.startsWith('demo-token-')) {\n      const response = await authAPI.updateProfile(profileData);\n      return response.data.user;\n    } else {\n      // Demo mode fallback\n      const currentUser = state.auth.user;\n      return {\n        ...currentUser,\n        ...profileData\n      };\n    }\n  } catch (error) {\n    var _error$response2, _error$response2$data;\n    return rejectWithValue(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Profile update failed');\n  }\n});\nexport const changePassword = createAsyncThunk('auth/changePassword', async (passwordData, {\n  rejectWithValue,\n  getState\n}) => {\n  try {\n    const state = getState();\n    const token = state.auth.token;\n    if (token && !token.startsWith('demo-token-')) {\n      await authAPI.changePassword(passwordData);\n      return true;\n    } else {\n      // Demo mode fallback\n      if (passwordData.currentPassword === 'admin123') {\n        return true;\n      } else {\n        throw new Error('Current password is incorrect');\n      }\n    }\n  } catch (error) {\n    return rejectWithValue(error.message || 'Password change failed');\n  }\n});\nconst initialState = {\n  user: null,\n  token: localStorage.getItem('adminToken'),\n  loading: false,\n  error: null,\n  isAuthenticated: !!localStorage.getItem('adminToken')\n};\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    logout: state => {\n      state.user = null;\n      state.token = null;\n      state.isAuthenticated = false;\n      state.error = null;\n      localStorage.removeItem('adminToken');\n      toast.success('Logged out successfully');\n    },\n    clearError: state => {\n      state.error = null;\n    },\n    setDemoMode: state => {\n      state.isDemoMode = true;\n    }\n  },\n  extraReducers: builder => {\n    builder\n    // Login\n    .addCase(login.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(login.fulfilled, (state, action) => {\n      state.loading = false;\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.isAuthenticated = true;\n      localStorage.setItem('adminToken', action.payload.token);\n      if (action.payload.token.startsWith('demo-token-')) {\n        toast.success('Login successful! (Demo mode)');\n      } else {\n        toast.success('Login successful!');\n      }\n    }).addCase(login.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n      toast.error(action.payload);\n    })\n\n    // Get Profile\n    .addCase(getProfile.pending, state => {\n      state.loading = true;\n    }).addCase(getProfile.fulfilled, (state, action) => {\n      state.loading = false;\n      state.user = action.payload;\n      state.isAuthenticated = true;\n    }).addCase(getProfile.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n      if (state.token) {\n        state.token = null;\n        state.isAuthenticated = false;\n        localStorage.removeItem('adminToken');\n      }\n    })\n\n    // Update Profile\n    .addCase(updateProfile.fulfilled, (state, action) => {\n      state.user = action.payload;\n      if (state.token && !state.token.startsWith('demo-token-')) {\n        toast.success('Profile updated successfully!');\n      } else {\n        toast.success('Profile updated successfully! (Demo mode)');\n      }\n    }).addCase(updateProfile.rejected, (state, action) => {\n      state.error = action.payload;\n      toast.error(action.payload);\n    })\n\n    // Change Password\n    .addCase(changePassword.fulfilled, state => {\n      if (state.token && !state.token.startsWith('demo-token-')) {\n        toast.success('Password changed successfully!');\n      } else {\n        toast.success('Password changed successfully! (Demo mode)');\n      }\n    }).addCase(changePassword.rejected, (state, action) => {\n      state.error = action.payload;\n      toast.error(action.payload);\n    });\n  }\n});\nexport const {\n  logout,\n  clearError,\n  setDemoMode\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","authAPI","toast","login","credentials","rejectWithValue","email","password","demoUser","id","name","username","role","avatar","demoToken","Date","now","token","user","response","data","error","_error$response","_error$response$data","message","getProfile","_","getState","state","auth","startsWith","Error","updateProfile","profileData","currentUser","_error$response2","_error$response2$data","changePassword","passwordData","currentPassword","initialState","localStorage","getItem","loading","isAuthenticated","authSlice","reducers","logout","removeItem","success","clearError","setDemoMode","isDemoMode","extraReducers","builder","addCase","pending","fulfilled","action","payload","setItem","rejected","actions","reducer"],"sources":["/Users/deepakyadav/Documents/ECommerce-Admin-Panel/src/store/slices/authSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport { authAPI } from '../../utils/api';\nimport toast from 'react-hot-toast';\n\n// Async thunks\nexport const login = createAsyncThunk(\n  'auth/login',\n  async (credentials, { rejectWithValue }) => {\n    try {\n      // Check for demo credentials first\n      if (credentials.email === 'admin@example.com' && credentials.password === 'admin123') {\n        const demoUser = {\n          id: 1,\n          name: 'Admin User',\n          email: 'admin@example.com',\n          username: 'admin',\n          role: 'admin',\n          avatar: 'https://via.placeholder.com/40x40/3B82F6/FFFFFF?text=AU',\n        };\n        const demoToken = 'demo-token-' + Date.now();\n        return { token: demoToken, user: demoUser };\n      }\n      \n      // If not demo credentials, try API\n      const response = await authAPI.login(credentials);\n      return response.data;\n    } catch (error) {\n      // If API fails and not demo credentials, reject\n      return rejectWithValue(error.response?.data?.message || 'Login failed');\n    }\n  }\n);\n\nexport const getProfile = createAsyncThunk(\n  'auth/getProfile',\n  async (_, { rejectWithValue, getState }) => {\n    try {\n      const state = getState();\n      const token = state.auth.token;\n      \n      if (token && !token.startsWith('demo-token-')) {\n        const response = await authAPI.getProfile();\n        return response.data;\n      } else if (token && token.startsWith('demo-token-')) {\n        // Demo mode fallback\n        return {\n          id: 1,\n          name: 'Admin User',\n          email: 'admin@example.com',\n          role: 'admin',\n          avatar: 'https://via.placeholder.com/40x40/3B82F6/FFFFFF?text=AU',\n        };\n      }\n      throw new Error('No token available');\n    } catch (error) {\n      return rejectWithValue(error.message || 'Failed to get profile');\n    }\n  }\n);\n\nexport const updateProfile = createAsyncThunk(\n  'auth/updateProfile',\n  async (profileData, { rejectWithValue, getState }) => {\n    try {\n      const state = getState();\n      const token = state.auth.token;\n      \n      if (token && !token.startsWith('demo-token-')) {\n        const response = await authAPI.updateProfile(profileData);\n        return response.data.user;\n      } else {\n        // Demo mode fallback\n        const currentUser = state.auth.user;\n        return { ...currentUser, ...profileData };\n      }\n    } catch (error) {\n      return rejectWithValue(error.response?.data?.message || 'Profile update failed');\n    }\n  }\n);\n\nexport const changePassword = createAsyncThunk(\n  'auth/changePassword',\n  async (passwordData, { rejectWithValue, getState }) => {\n    try {\n      const state = getState();\n      const token = state.auth.token;\n      \n      if (token && !token.startsWith('demo-token-')) {\n        await authAPI.changePassword(passwordData);\n        return true;\n      } else {\n        // Demo mode fallback\n        if (passwordData.currentPassword === 'admin123') {\n          return true;\n        } else {\n          throw new Error('Current password is incorrect');\n        }\n      }\n    } catch (error) {\n      return rejectWithValue(error.message || 'Password change failed');\n    }\n  }\n);\n\nconst initialState = {\n  user: null,\n  token: localStorage.getItem('adminToken'),\n  loading: false,\n  error: null,\n  isAuthenticated: !!localStorage.getItem('adminToken'),\n};\n\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    logout: (state) => {\n      state.user = null;\n      state.token = null;\n      state.isAuthenticated = false;\n      state.error = null;\n      localStorage.removeItem('adminToken');\n      toast.success('Logged out successfully');\n    },\n    clearError: (state) => {\n      state.error = null;\n    },\n    setDemoMode: (state) => {\n      state.isDemoMode = true;\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      // Login\n      .addCase(login.pending, (state) => {\n        state.loading = true;\n        state.error = null;\n      })\n      .addCase(login.fulfilled, (state, action) => {\n        state.loading = false;\n        state.user = action.payload.user;\n        state.token = action.payload.token;\n        state.isAuthenticated = true;\n        localStorage.setItem('adminToken', action.payload.token);\n        \n        if (action.payload.token.startsWith('demo-token-')) {\n          toast.success('Login successful! (Demo mode)');\n        } else {\n          toast.success('Login successful!');\n        }\n      })\n      .addCase(login.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.payload;\n        toast.error(action.payload);\n      })\n      \n      // Get Profile\n      .addCase(getProfile.pending, (state) => {\n        state.loading = true;\n      })\n      .addCase(getProfile.fulfilled, (state, action) => {\n        state.loading = false;\n        state.user = action.payload;\n        state.isAuthenticated = true;\n      })\n      .addCase(getProfile.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.payload;\n        if (state.token) {\n          state.token = null;\n          state.isAuthenticated = false;\n          localStorage.removeItem('adminToken');\n        }\n      })\n      \n      // Update Profile\n      .addCase(updateProfile.fulfilled, (state, action) => {\n        state.user = action.payload;\n        if (state.token && !state.token.startsWith('demo-token-')) {\n          toast.success('Profile updated successfully!');\n        } else {\n          toast.success('Profile updated successfully! (Demo mode)');\n        }\n      })\n      .addCase(updateProfile.rejected, (state, action) => {\n        state.error = action.payload;\n        toast.error(action.payload);\n      })\n      \n      // Change Password\n      .addCase(changePassword.fulfilled, (state) => {\n        if (state.token && !state.token.startsWith('demo-token-')) {\n          toast.success('Password changed successfully!');\n        } else {\n          toast.success('Password changed successfully! (Demo mode)');\n        }\n      })\n      .addCase(changePassword.rejected, (state, action) => {\n        state.error = action.payload;\n        toast.error(action.payload);\n      });\n  },\n});\n\nexport const { logout, clearError, setDemoMode } = authSlice.actions;\nexport default authSlice.reducer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}