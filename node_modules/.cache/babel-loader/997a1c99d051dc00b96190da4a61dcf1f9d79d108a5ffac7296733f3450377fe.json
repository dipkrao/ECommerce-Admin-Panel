{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  sidebarOpen: true,\n  theme: 'light',\n  notifications: [],\n  modals: {\n    productModal: false,\n    categoryModal: false,\n    orderModal: false,\n    deleteConfirmModal: false\n  },\n  loadingStates: {\n    global: false,\n    products: false,\n    categories: false,\n    orders: false\n  },\n  searchQuery: '',\n  selectedItems: [],\n  viewMode: 'grid' // grid or list\n};\nconst uiSlice = createSlice({\n  name: 'ui',\n  initialState,\n  reducers: {\n    toggleSidebar: state => {\n      state.sidebarOpen = !state.sidebarOpen;\n    },\n    setSidebarOpen: (state, action) => {\n      state.sidebarOpen = action.payload;\n    },\n    toggleTheme: state => {\n      state.theme = state.theme === 'light' ? 'dark' : 'light';\n    },\n    setTheme: (state, action) => {\n      state.theme = action.payload;\n    },\n    addNotification: (state, action) => {\n      state.notifications.push({\n        id: Date.now(),\n        ...action.payload\n      });\n    },\n    removeNotification: (state, action) => {\n      state.notifications = state.notifications.filter(notification => notification.id !== action.payload);\n    },\n    clearNotifications: state => {\n      state.notifications = [];\n    },\n    openModal: (state, action) => {\n      const {\n        modalName\n      } = action.payload;\n      if (state.modals.hasOwnProperty(modalName)) {\n        state.modals[modalName] = true;\n      }\n    },\n    closeModal: (state, action) => {\n      const {\n        modalName\n      } = action.payload;\n      if (state.modals.hasOwnProperty(modalName)) {\n        state.modals[modalName] = false;\n      }\n    },\n    closeAllModals: state => {\n      Object.keys(state.modals).forEach(key => {\n        state.modals[key] = false;\n      });\n    },\n    setLoadingState: (state, action) => {\n      const {\n        key,\n        loading\n      } = action.payload;\n      if (state.loadingStates.hasOwnProperty(key)) {\n        state.loadingStates[key] = loading;\n      }\n    },\n    setGlobalLoading: (state, action) => {\n      state.loadingStates.global = action.payload;\n    },\n    setSearchQuery: (state, action) => {\n      state.searchQuery = action.payload;\n    },\n    clearSearchQuery: state => {\n      state.searchQuery = '';\n    },\n    setSelectedItems: (state, action) => {\n      state.selectedItems = action.payload;\n    },\n    addSelectedItem: (state, action) => {\n      if (!state.selectedItems.includes(action.payload)) {\n        state.selectedItems.push(action.payload);\n      }\n    },\n    removeSelectedItem: (state, action) => {\n      state.selectedItems = state.selectedItems.filter(item => item !== action.payload);\n    },\n    clearSelectedItems: state => {\n      state.selectedItems = [];\n    },\n    setViewMode: (state, action) => {\n      state.viewMode = action.payload;\n    },\n    resetUI: state => {\n      return {\n        ...initialState,\n        theme: state.theme\n      }; // Keep theme preference\n    }\n  }\n});\nexport const {\n  toggleSidebar,\n  setSidebarOpen,\n  toggleTheme,\n  setTheme,\n  addNotification,\n  removeNotification,\n  clearNotifications,\n  openModal,\n  closeModal,\n  closeAllModals,\n  setLoadingState,\n  setGlobalLoading,\n  setSearchQuery,\n  clearSearchQuery,\n  setSelectedItems,\n  addSelectedItem,\n  removeSelectedItem,\n  clearSelectedItems,\n  setViewMode,\n  resetUI\n} = uiSlice.actions;\nexport default uiSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","sidebarOpen","theme","notifications","modals","productModal","categoryModal","orderModal","deleteConfirmModal","loadingStates","global","products","categories","orders","searchQuery","selectedItems","viewMode","uiSlice","name","reducers","toggleSidebar","state","setSidebarOpen","action","payload","toggleTheme","setTheme","addNotification","push","id","Date","now","removeNotification","filter","notification","clearNotifications","openModal","modalName","hasOwnProperty","closeModal","closeAllModals","Object","keys","forEach","key","setLoadingState","loading","setGlobalLoading","setSearchQuery","clearSearchQuery","setSelectedItems","addSelectedItem","includes","removeSelectedItem","item","clearSelectedItems","setViewMode","resetUI","actions","reducer"],"sources":["/Users/deepakyadav/Documents/ECommerce-Admin-Panel/src/store/slices/uiSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n  sidebarOpen: true,\n  theme: 'light',\n  notifications: [],\n  modals: {\n    productModal: false,\n    categoryModal: false,\n    orderModal: false,\n    deleteConfirmModal: false,\n  },\n  loadingStates: {\n    global: false,\n    products: false,\n    categories: false,\n    orders: false,\n  },\n  searchQuery: '',\n  selectedItems: [],\n  viewMode: 'grid', // grid or list\n};\n\nconst uiSlice = createSlice({\n  name: 'ui',\n  initialState,\n  reducers: {\n    toggleSidebar: (state) => {\n      state.sidebarOpen = !state.sidebarOpen;\n    },\n    setSidebarOpen: (state, action) => {\n      state.sidebarOpen = action.payload;\n    },\n    toggleTheme: (state) => {\n      state.theme = state.theme === 'light' ? 'dark' : 'light';\n    },\n    setTheme: (state, action) => {\n      state.theme = action.payload;\n    },\n    addNotification: (state, action) => {\n      state.notifications.push({\n        id: Date.now(),\n        ...action.payload,\n      });\n    },\n    removeNotification: (state, action) => {\n      state.notifications = state.notifications.filter(\n        (notification) => notification.id !== action.payload\n      );\n    },\n    clearNotifications: (state) => {\n      state.notifications = [];\n    },\n    openModal: (state, action) => {\n      const { modalName } = action.payload;\n      if (state.modals.hasOwnProperty(modalName)) {\n        state.modals[modalName] = true;\n      }\n    },\n    closeModal: (state, action) => {\n      const { modalName } = action.payload;\n      if (state.modals.hasOwnProperty(modalName)) {\n        state.modals[modalName] = false;\n      }\n    },\n    closeAllModals: (state) => {\n      Object.keys(state.modals).forEach((key) => {\n        state.modals[key] = false;\n      });\n    },\n    setLoadingState: (state, action) => {\n      const { key, loading } = action.payload;\n      if (state.loadingStates.hasOwnProperty(key)) {\n        state.loadingStates[key] = loading;\n      }\n    },\n    setGlobalLoading: (state, action) => {\n      state.loadingStates.global = action.payload;\n    },\n    setSearchQuery: (state, action) => {\n      state.searchQuery = action.payload;\n    },\n    clearSearchQuery: (state) => {\n      state.searchQuery = '';\n    },\n    setSelectedItems: (state, action) => {\n      state.selectedItems = action.payload;\n    },\n    addSelectedItem: (state, action) => {\n      if (!state.selectedItems.includes(action.payload)) {\n        state.selectedItems.push(action.payload);\n      }\n    },\n    removeSelectedItem: (state, action) => {\n      state.selectedItems = state.selectedItems.filter(\n        (item) => item !== action.payload\n      );\n    },\n    clearSelectedItems: (state) => {\n      state.selectedItems = [];\n    },\n    setViewMode: (state, action) => {\n      state.viewMode = action.payload;\n    },\n    resetUI: (state) => {\n      return { ...initialState, theme: state.theme }; // Keep theme preference\n    },\n  },\n});\n\nexport const {\n  toggleSidebar,\n  setSidebarOpen,\n  toggleTheme,\n  setTheme,\n  addNotification,\n  removeNotification,\n  clearNotifications,\n  openModal,\n  closeModal,\n  closeAllModals,\n  setLoadingState,\n  setGlobalLoading,\n  setSearchQuery,\n  clearSearchQuery,\n  setSelectedItems,\n  addSelectedItem,\n  removeSelectedItem,\n  clearSelectedItems,\n  setViewMode,\n  resetUI,\n} = uiSlice.actions;\n\nexport default uiSlice.reducer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}