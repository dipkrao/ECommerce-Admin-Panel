{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport { orderAPI } from '../../utils/api';\nimport toast from 'react-hot-toast';\n\n// Async thunks\nexport const fetchOrders = createAsyncThunk('orders/fetchOrders', async (params, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await orderAPI.getAll(params);\n    return response.data;\n  } catch (error) {\n    var _error$response, _error$response$data;\n    return rejectWithValue(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Failed to fetch orders');\n  }\n});\nexport const fetchOrderById = createAsyncThunk('orders/fetchOrderById', async (id, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await orderAPI.getById(id);\n    return response.data;\n  } catch (error) {\n    var _error$response2, _error$response2$data;\n    return rejectWithValue(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Failed to fetch order');\n  }\n});\nexport const updateOrderStatus = createAsyncThunk('orders/updateOrderStatus', async ({\n  id,\n  status\n}, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await orderAPI.updateStatus(id, status);\n    toast.success('Order status updated successfully!');\n    return {\n      id,\n      status\n    };\n  } catch (error) {\n    var _error$response3, _error$response3$data;\n    return rejectWithValue(((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || 'Failed to update order status');\n  }\n});\nconst initialState = {\n  orders: [],\n  currentOrder: null,\n  loading: false,\n  error: null,\n  totalOrders: 0,\n  filters: {\n    status: 'all',\n    dateRange: null,\n    customer: ''\n  },\n  pagination: {\n    page: 1,\n    limit: 10\n  }\n};\nconst orderSlice = createSlice({\n  name: 'orders',\n  initialState,\n  reducers: {\n    setCurrentOrder: (state, action) => {\n      state.currentOrder = action.payload;\n    },\n    clearCurrentOrder: state => {\n      state.currentOrder = null;\n    },\n    setFilters: (state, action) => {\n      state.filters = {\n        ...state.filters,\n        ...action.payload\n      };\n      state.pagination.page = 1;\n    },\n    setPagination: (state, action) => {\n      state.pagination = {\n        ...state.pagination,\n        ...action.payload\n      };\n    },\n    clearFilters: state => {\n      state.filters = initialState.filters;\n      state.pagination.page = 1;\n    },\n    clearError: state => {\n      state.error = null;\n    }\n  },\n  extraReducers: builder => {\n    builder\n    // Fetch Orders\n    .addCase(fetchOrders.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(fetchOrders.fulfilled, (state, action) => {\n      state.loading = false;\n      state.orders = action.payload.orders || action.payload;\n      state.totalOrders = action.payload.total || action.payload.length || 0;\n    }).addCase(fetchOrders.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n      toast.error(action.payload);\n    })\n\n    // Fetch Order by ID\n    .addCase(fetchOrderById.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(fetchOrderById.fulfilled, (state, action) => {\n      state.loading = false;\n      state.currentOrder = action.payload;\n    }).addCase(fetchOrderById.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n      toast.error(action.payload);\n    })\n\n    // Update Order Status\n    .addCase(updateOrderStatus.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(updateOrderStatus.fulfilled, (state, action) => {\n      state.loading = false;\n      const {\n        id,\n        status\n      } = action.payload;\n\n      // Update in orders list\n      const orderIndex = state.orders.findIndex(o => o._id === id);\n      if (orderIndex !== -1) {\n        state.orders[orderIndex].status = status;\n      }\n\n      // Update current order if it's the same\n      if (state.currentOrder && state.currentOrder._id === id) {\n        state.currentOrder.status = status;\n      }\n    }).addCase(updateOrderStatus.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n      toast.error(action.payload);\n    });\n  }\n});\nexport const {\n  setCurrentOrder,\n  clearCurrentOrder,\n  setFilters,\n  setPagination,\n  clearFilters,\n  clearError\n} = orderSlice.actions;\nexport default orderSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","orderAPI","toast","fetchOrders","params","rejectWithValue","response","getAll","data","error","_error$response","_error$response$data","message","fetchOrderById","id","getById","_error$response2","_error$response2$data","updateOrderStatus","status","updateStatus","success","_error$response3","_error$response3$data","initialState","orders","currentOrder","loading","totalOrders","filters","dateRange","customer","pagination","page","limit","orderSlice","name","reducers","setCurrentOrder","state","action","payload","clearCurrentOrder","setFilters","setPagination","clearFilters","clearError","extraReducers","builder","addCase","pending","fulfilled","total","length","rejected","orderIndex","findIndex","o","_id","actions","reducer"],"sources":["/Users/deepakyadav/Documents/ECommerce-Admin-Panel/src/store/slices/orderSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport { orderAPI } from '../../utils/api';\nimport toast from 'react-hot-toast';\n\n// Async thunks\nexport const fetchOrders = createAsyncThunk(\n  'orders/fetchOrders',\n  async (params, { rejectWithValue }) => {\n    try {\n      const response = await orderAPI.getAll(params);\n      return response.data;\n    } catch (error) {\n      return rejectWithValue(error.response?.data?.message || 'Failed to fetch orders');\n    }\n  }\n);\n\nexport const fetchOrderById = createAsyncThunk(\n  'orders/fetchOrderById',\n  async (id, { rejectWithValue }) => {\n    try {\n      const response = await orderAPI.getById(id);\n      return response.data;\n    } catch (error) {\n      return rejectWithValue(error.response?.data?.message || 'Failed to fetch order');\n    }\n  }\n);\n\nexport const updateOrderStatus = createAsyncThunk(\n  'orders/updateOrderStatus',\n  async ({ id, status }, { rejectWithValue }) => {\n    try {\n      const response = await orderAPI.updateStatus(id, status);\n      toast.success('Order status updated successfully!');\n      return { id, status };\n    } catch (error) {\n      return rejectWithValue(error.response?.data?.message || 'Failed to update order status');\n    }\n  }\n);\n\nconst initialState = {\n  orders: [],\n  currentOrder: null,\n  loading: false,\n  error: null,\n  totalOrders: 0,\n  filters: {\n    status: 'all',\n    dateRange: null,\n    customer: '',\n  },\n  pagination: {\n    page: 1,\n    limit: 10,\n  },\n};\n\nconst orderSlice = createSlice({\n  name: 'orders',\n  initialState,\n  reducers: {\n    setCurrentOrder: (state, action) => {\n      state.currentOrder = action.payload;\n    },\n    clearCurrentOrder: (state) => {\n      state.currentOrder = null;\n    },\n    setFilters: (state, action) => {\n      state.filters = { ...state.filters, ...action.payload };\n      state.pagination.page = 1;\n    },\n    setPagination: (state, action) => {\n      state.pagination = { ...state.pagination, ...action.payload };\n    },\n    clearFilters: (state) => {\n      state.filters = initialState.filters;\n      state.pagination.page = 1;\n    },\n    clearError: (state) => {\n      state.error = null;\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      // Fetch Orders\n      .addCase(fetchOrders.pending, (state) => {\n        state.loading = true;\n        state.error = null;\n      })\n      .addCase(fetchOrders.fulfilled, (state, action) => {\n        state.loading = false;\n        state.orders = action.payload.orders || action.payload;\n        state.totalOrders = action.payload.total || action.payload.length || 0;\n      })\n      .addCase(fetchOrders.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.payload;\n        toast.error(action.payload);\n      })\n      \n      // Fetch Order by ID\n      .addCase(fetchOrderById.pending, (state) => {\n        state.loading = true;\n        state.error = null;\n      })\n      .addCase(fetchOrderById.fulfilled, (state, action) => {\n        state.loading = false;\n        state.currentOrder = action.payload;\n      })\n      .addCase(fetchOrderById.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.payload;\n        toast.error(action.payload);\n      })\n      \n      // Update Order Status\n      .addCase(updateOrderStatus.pending, (state) => {\n        state.loading = true;\n        state.error = null;\n      })\n      .addCase(updateOrderStatus.fulfilled, (state, action) => {\n        state.loading = false;\n        const { id, status } = action.payload;\n        \n        // Update in orders list\n        const orderIndex = state.orders.findIndex(o => o._id === id);\n        if (orderIndex !== -1) {\n          state.orders[orderIndex].status = status;\n        }\n        \n        // Update current order if it's the same\n        if (state.currentOrder && state.currentOrder._id === id) {\n          state.currentOrder.status = status;\n        }\n      })\n      .addCase(updateOrderStatus.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.payload;\n        toast.error(action.payload);\n      });\n  },\n});\n\nexport const {\n  setCurrentOrder,\n  clearCurrentOrder,\n  setFilters,\n  setPagination,\n  clearFilters,\n  clearError,\n} = orderSlice.actions;\n\nexport default orderSlice.reducer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}